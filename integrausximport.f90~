MODULE SOLITO_MANTRA
	IMPLICIT NONE
	INTEGER, PARAMETER:: 	DP=KIND(0.D0)
	REAL, PARAMETER::		PiG = ACOS(-1.0_DP)

CONTAINS

ELEMENTAL FUNCTION GAUSSIANA(X)

		IMPLICIT NONE
	        REAL(DP), INTENT(IN):: 	X
		REAL(DP):: 		GAUSSIANA
			
		GAUSSIANA = 1.D0/SQRT(2.D0*PiG)* EXP(-(X**2.D0)/2.D0)
END FUNCTION GAUSSIANA

END MODULE SOLITO_MANTRA

PROGRAM INTEGRALE_GAUSSIANA_PER_IMPORTANZA_IN_0_B
	USE SOLITO_MANTRA
	IMPLICIT NONE

	REAL(DP)::		LOWER_LIMIT=0.D0, UPPER_LIMIT, GRAND_A_NORM
	INTEGER::		N_INTERVALS, N_POINTS_PER_INTERVAL
 
	REAL(DP), ALLOCATABLE::	X(:), GRAND_X(:)

	REAL(DP)::		GRAND_INTEGRAL, TOTAL_INTEGRAL, PARTIAL_INTEGRAL
	REAL(DP)::		TOTAL_ERROR, PARTIAL_ERROR
	REAL(DP)::		PARTIAL_SUM_OF_SQUARES, TOTAL_SUM_OF_SQUARES
	REAL(DP)::		X_LOW, X_UP, DX, A_NORM 


	
	REAL(DP)::		SOMMA
	INTEGER::		I


        CHARACTER(LEN=255):: my_file

! Come lavorare con i file (formatted lo metto in a human readable format)

        READ(*,*) my_file
        OPEN(UNIT=1,FILE=my_file,STATUS="UNKNOWN",FORM="FORMATTED",ACCESS="SEQUENTIAL",ACTION="READWRITE",POSITION="ASIS",RECL=7)

1	WRITE(6,2, ADVANCE='NO')
2	FORMAT(6X,'Please enter integral upper extremum (lower = 0) and number of intervals: ')
	READ(*,*,ERR=1)UPPER_LIMIT, N_INTERVALS
	IF(LOWER_LIMIT.GE.UPPER_LIMIT) GOTO 1
	IF(N_INTERVALS.LE.0) GOTO 1
	DX = (UPPER_LIMIT-LOWER_LIMIT)/N_INTERVALS

3	WRITE(6,4, ADVANCE='NO')
4	FORMAT(6X,'Please enter number of sampling points per interval: ')
	READ(*,*,ERR=3)N_POINTS_PER_INTERVAL
	IF(N_POINTS_PER_INTERVAL.LE.0) GOTO 3


	ALLOCATE(X(N_POINTS_PER_INTERVAL))
!        ALLOCATE(GRAND_X(N_INTERVALS*N_POINTS_PER_INTERVAL))

	GRAND_A_NORM		= 1.D0/(1.D0-EXP(-UPPER_LIMIT))	
	GRAND_INTEGRAL		= 0.D0
	TOTAL_INTEGRAL		= 0.D0
	TOTAL_ERROR		= 0.D0
        TOTAL_SUM_OF_SQUARES 	= 0.D0






	DO I = 1, N_INTERVALS


	 X_LOW  	= (I-1)*DX	
	 X_UP   	= I*DX
	 A_NORM 	= 1.D0/(EXP(-X_LOW)-EXP(-X_UP))

	 CALL RANDOM_NUMBER(X)
	 X      		= -LOG(EXP(-X_LOW)-X/A_NORM)
	 X			= GAUSSIANA(X)/(A_NORM*EXP(-X))
     PARTIAL_SUM_OF_SQUARES = SUM(X**2.D0)
     TOTAL_SUM_OF_SQUARES   = TOTAL_SUM_OF_SQUARES + PARTIAL_SUM_OF_SQUARES

	 SOMMA			= SUM(X)

	 PARTIAL_INTEGRAL	= SOMMA/N_POINTS_PER_INTERVAL
	 TOTAL_INTEGRAL		= TOTAL_INTEGRAL + PARTIAL_INTEGRAL
	

	 PARTIAL_ERROR 		= SQRT(ABS((PARTIAL_SUM_OF_SQUARES/N_POINTS_PER_INTERVAL) - (PARTIAL_INTEGRAL**2.D0))) &
				&/SQRT(1.D0* N_POINTS_PER_INTERVAL)
	 TOTAL_ERROR		= SQRT(ABS(TOTAL_SUM_OF_SQUARES/(I*N_POINTS_PER_INTERVAL) - (TOTAL_INTEGRAL**2.D0))) &
				&/SQRT(1.D0*I*N_POINTS_PER_INTERVAL)
	 WRITE(1,*)'Integral in ', X_LOW, X_UP, ':', PARTIAL_INTEGRAL, 'error:', PARTIAL_ERROR
	 WRITE(1,*)'Integral in ', LOWER_LIMIT, X_UP, ':', TOTAL_INTEGRAL, 'error:', TOTAL_ERROR
	END DO
	
	 
	READ(*,*)
END PROGRAM INTEGRALE_GAUSSIANA_PER_IMPORTANZA_IN_0_B



	
	
